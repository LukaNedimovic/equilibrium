CoreOS 's container runtime competitor rkt hit version 1.0 today and according to the company, it's now ready for production use. Version 1.0 introduces a number of new security features and, going forward, any changes to the command line interface and on-disk format will be backwards compatible. Rkt currently supports both applications packaged as CoreOS App Container images and in Docker's image format, so you could build your containers with Docker and still run them under rkt. CoreOS announced the rkt project in late 2014 with the express intent to offer an alternative to the Docker runtime. "We thought Docker would become a simple unit that we can all agree on," CoreOS CEO Alex Polvi said at the time. "Unfortunately, a simple re-usable component is not how things are playing out. Docker now is building tools for launching cloud servers, systems for clustering, and a wide range of functions: building images, running images, uploading, downloading, and eventually even overlay networking, all compiled into one monolithic binary running primarily as root on your server." Besides rkt, CoreOS also launched the App Container (appc) project around the same time. Appc is an alternative to the Docker's container specs and image format. Over the course of the last year, Docker contributed its container specs to the Open Container Initiative , an open source alliance that includes all of the major players in this field. At first glance, it seems this move should've put the wind out of projects like rkt, appc and CoreOS's image format. Polvi, however, argues today that "the primary focus of the OCI community is creating standards for the container runtime environment, rather than the container image." For the most part, having two highly visible competing products in this space will only help push the container movement forward - especially given that the standardization process is still in its infancy.