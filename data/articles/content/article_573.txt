Big IT rising An overview of Lean, Agile and DevOps New Ways of Working The lunch of big corporate IT is being stolen by smaller, nimbler companies. Big IT, with its greater resources, should have crushed the competition. Rather it is playing catch-up. But things are changing. There is a quiet revolution in corporate IT. Big organisations are learning from small companies and are beginning to use it at scale. Goliath is back but acting like David. All this change leaves the corporate manager at a loss as to what tools to use. Big IT, especially banks, is stuck in a world of waterfall development where plans are rather rigid, risk management is paramount and new functionality to the customer is few and far between. The aim of this article is to provide a toolbox of different methodologies that can be used to transform Big IT. For the sake of simplicity, let's refer to our toolbox of methodologies as the "New Ways of Working". Our starting point is an exploration of the different elements of the New Ways of Working (Figure 1). This was adapted from Gartner's framework for DevOps. Social Psychology Probably the biggest shift away from the traditional command and control culture in Big IT is the new focus on Social Psychology. If we can figure out what drives people and keeps them motivated and then lets them work in small self-organising teams, we have a recipe for success. Social Psychology forms the foundation of the success of almost all the other tools. It seems that people do their best work when they work in a small team of not more than 10-12 people. Jess Bezos famously said that a team should not need more than two pizzas to be fed. Unfortunately really big pieces of work cannot be done by one small team. The anthropologist Robert Dunbar figured out that the number of people in a stable social group is 150. In the IT domain this means that at most 150 individuals should work together on a product or in a larger domain. My primary group is therefore a small team and these small teams together form a larger domain or grouping. Individual motivation within these teams is as important. Dan Pink thinks that people are motivated by a sense of mastery, some autonomy and purpose . All of us want to feel that we are really good at something. That is why we pursue hobbies that take up our time and energy. We steadily get better and get enjoyment out of it. Performance management systems are changing to the Dreyfus model of skill acquisition that reflects this need for mastery. Small empowered teams give a sense of autonomy. If the work my teams does contributes to something larger that the team or myself, it adds to purpose. Agile Approaches The next area we want to highlight is the role of the Agile movement in the New Ways of Working. Agile is the standard approach for small companies. The challenge for Big IT is to scale an Agile methodology like Scrum for large organisations. Scrum has its roots in Takeuchi and Nonaka's Harvard Business Review article "The New Product Development Game", where they compared their approach to the sport of Rugby. In Rugby the team "tries to go to the distance as a unit, passing the ball back and forth". Managers had to realize that the traditional, sequential approach to developing new products will not work. Development teams must work as a unit to reach a common goal. Steve Denning summarised Scrum nicely as: Organising work in short cycles. The management doesn't interrupt the team during a work cycle. The team reports to the client , not the manager. The team estimates how much time work will take. The team decides how much work it can do in an iteration. The team decides how to do the work in the iteration. The team measures its own performance. Defining work goals before each cycle starts. Defining work goals through user stories. Systematically removing impediments. Traditionally Agile was used for software development, but now it is being used for total organisational transformation. The DevOps Movement DevOps is the proverbial new kid on the block. It is not a methodology or a framework and builds on Lean and Agile methodologies. It emphasises the following aspects: Developers and Operations people working together in a cross-functional team . The team that develops the software also maintains the software in production. Originally Agile focused on bringing testing and developers [replace with: development] together. DevOps adds the operational dimension. There is a focus on automated deployment pipelines . Manual configuration of environments and the manual movement of code between environments are seen as anti-patterns. Continuous deployment is central as the emphasis is shifting to smaller releases to the production environment quicker. This minimizes risk inherent in big production releases to service outages. Automation is the name of the game in DevOps. Lean Thinking Another lens of the software development process is Lean thinking. Within Lean there are many different schools of thought. The underlying principles that unite these methodologies are: Value gets defined by the customer. The value stream generates value to the customer and spans organisational silos. Requirements are pulled rather than pushed through the system with the consequence that features are not built before they are needed. The process flows continuously. We strive to get better all the time. What started off as a manufacturing methodology is starting to influence the world of software development. In the waterfall software development process different development phases are separated by gates. These gates are mutually exclusive. Work cannot move to the next phase until the work of the previous phases is completed. In the waterfall process this typically means that requirements need to be finalised before detail design work can start. When design is finished we can move to coding and deployment. The term Waterfall Software Development is a misnomer as there is very little emphasis on "Flow" as implied by the name. Kanban is a great Lean tool that help to emphasise flow and to make work visible. Putting it together Our discussion so far has given a brief outline of the New Ways of Working. We have focused on the Social Psychology aspects, Lean, DevOps and Agile. Agile will continue to be the prevalent paradigm to deliver software and it will be enhanced by Lean Thinking and the contributions of DevOps. The real challenge is how to enable this thinking in the IT departments of very large organisations. Informal surveys done by Scrum Alliance show that most Agile teams report tension between the way the teams operate and the way the rest of the organisation is run. Large cultural changes are necessary to overcome this. The organisational processes around budgets, people management and performance management also need to change radically to support these New Ways of Working. Very few people know how to do this well and at scale, and this is a fertile field for research and consulting. A suggestion for a simple heuristic on where to start these New Ways of Working in a large corporate with Big IT: Define what culture you want in the organisation and start living, talking and acting in accordance with this culture. If, for example, you want to move the focus away from a management culture to craftmanship, start wearing sneakers and jeans. You can't roll up your sleeves in an Italian suit. Use the Lean tools for the non-product development areas of the organisation. Automate as much as possible. Use Agile and DevOps for the product development areas maturing towards continuous delivery. Steps 2 and 3 can be done simultaneously. Using the tools in Figure 1 is a great start to wake Big IT from its slumber. In other posts we will unpack the diagram in more detail. When Big IT starts punching above or even at it weight again I don't want to stand in their way. Join the movement and let's start the revolution. Missing something? If you feel we missed something in the discussion or diagram let us know in the responses below. Thanks for reading. Originally published at langerman.co.za If you enjoyed this and think others will too, will you please "Recommend" or share with a friend?